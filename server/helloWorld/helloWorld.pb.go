// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloWorld.proto

package helloWorld

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HellowWorldRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HellowWorldRequest) Reset()         { *m = HellowWorldRequest{} }
func (m *HellowWorldRequest) String() string { return proto.CompactTextString(m) }
func (*HellowWorldRequest) ProtoMessage()    {}
func (*HellowWorldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_06405d6227701fc8, []int{0}
}

func (m *HellowWorldRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HellowWorldRequest.Unmarshal(m, b)
}
func (m *HellowWorldRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HellowWorldRequest.Marshal(b, m, deterministic)
}
func (m *HellowWorldRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HellowWorldRequest.Merge(m, src)
}
func (m *HellowWorldRequest) XXX_Size() int {
	return xxx_messageInfo_HellowWorldRequest.Size(m)
}
func (m *HellowWorldRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HellowWorldRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HellowWorldRequest proto.InternalMessageInfo

type HelloWorldResponse struct {
	ReturnText           string   `protobuf:"bytes,1,opt,name=returnText,proto3" json:"returnText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloWorldResponse) Reset()         { *m = HelloWorldResponse{} }
func (m *HelloWorldResponse) String() string { return proto.CompactTextString(m) }
func (*HelloWorldResponse) ProtoMessage()    {}
func (*HelloWorldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_06405d6227701fc8, []int{1}
}

func (m *HelloWorldResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloWorldResponse.Unmarshal(m, b)
}
func (m *HelloWorldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloWorldResponse.Marshal(b, m, deterministic)
}
func (m *HelloWorldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloWorldResponse.Merge(m, src)
}
func (m *HelloWorldResponse) XXX_Size() int {
	return xxx_messageInfo_HelloWorldResponse.Size(m)
}
func (m *HelloWorldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloWorldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloWorldResponse proto.InternalMessageInfo

func (m *HelloWorldResponse) GetReturnText() string {
	if m != nil {
		return m.ReturnText
	}
	return ""
}

func init() {
	proto.RegisterType((*HellowWorldRequest)(nil), "helloWorld.hellowWorldRequest")
	proto.RegisterType((*HelloWorldResponse)(nil), "helloWorld.helloWorldResponse")
}

func init() { proto.RegisterFile("helloWorld.proto", fileDescriptor_06405d6227701fc8) }

var fileDescriptor_06405d6227701fc8 = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x48, 0xcd, 0xc9,
	0xc9, 0x0f, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0x89, 0x70, 0x09, 0x81, 0x79, 0xe5, 0x60, 0x6e, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89,
	0x92, 0x09, 0x54, 0x14, 0x2a, 0x58, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc7, 0xc5, 0x55,
	0x94, 0x5a, 0x52, 0x5a, 0x94, 0x17, 0x92, 0x5a, 0x51, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19,
	0x84, 0x24, 0x62, 0x94, 0xc2, 0x25, 0x88, 0xd0, 0x15, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a,
	0xe4, 0xcf, 0xc5, 0x9b, 0x9e, 0x5a, 0xe2, 0x01, 0x17, 0x17, 0x92, 0xd3, 0x43, 0x72, 0x10, 0xa6,
	0xdd, 0x52, 0x98, 0xf2, 0x28, 0xae, 0x48, 0x62, 0x03, 0x7b, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0xec, 0x47, 0xee, 0x51, 0xd8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloWorldServiceClient is the client API for HelloWorldService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloWorldServiceClient interface {
	GetHelloWorld(ctx context.Context, in *HellowWorldRequest, opts ...grpc.CallOption) (*HelloWorldResponse, error)
}

type helloWorldServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloWorldServiceClient(cc *grpc.ClientConn) HelloWorldServiceClient {
	return &helloWorldServiceClient{cc}
}

func (c *helloWorldServiceClient) GetHelloWorld(ctx context.Context, in *HellowWorldRequest, opts ...grpc.CallOption) (*HelloWorldResponse, error) {
	out := new(HelloWorldResponse)
	err := c.cc.Invoke(ctx, "/helloWorld.helloWorldService/getHelloWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloWorldServiceServer is the server API for HelloWorldService service.
type HelloWorldServiceServer interface {
	GetHelloWorld(context.Context, *HellowWorldRequest) (*HelloWorldResponse, error)
}

func RegisterHelloWorldServiceServer(s *grpc.Server, srv HelloWorldServiceServer) {
	s.RegisterService(&_HelloWorldService_serviceDesc, srv)
}

func _HelloWorldService_GetHelloWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HellowWorldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloWorldServiceServer).GetHelloWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloWorld.helloWorldService/GetHelloWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloWorldServiceServer).GetHelloWorld(ctx, req.(*HellowWorldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloWorldService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloWorld.helloWorldService",
	HandlerType: (*HelloWorldServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getHelloWorld",
			Handler:    _HelloWorldService_GetHelloWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloWorld.proto",
}
